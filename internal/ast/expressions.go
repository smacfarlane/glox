// DO NOT EDIT
// This file is generated by tools/generator/ast/main.go
package ast

import (
	"github.com/smacfarlane/glox/internal/tokens"
)

type Expr interface {
	Accept(Visitor) string
}

type Binary struct {
	Left     Expr
	Operator tokens.Token
	Right    Expr
}

func (n Binary) Accept(v Visitor) string {
	return v.VisitBinaryExpression(n)
}

type Grouping struct {
	Expression Expr
}

func (n Grouping) Accept(v Visitor) string {
	return v.VisitGroupingExpression(n)
}

type Literal struct {
	Value string
}

func (n Literal) Accept(v Visitor) string {
	return v.VisitLiteralExpression(n)
}

type Unary struct {
	Operator tokens.Token
	Right    Expr
}

func (n Unary) Accept(v Visitor) string {
	return v.VisitUnaryExpression(n)
}
